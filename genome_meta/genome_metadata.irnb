{"cells":[{"metadata":{"_uuid":"9e19b938c324c0733982f9a358e7ef2f9965732a"},"cell_type":"markdown","source":"# A visual exploration of the size and GC content of sequenced genomes avaliable on NCBI\n\nGenome size is commonly reported in megabase pairs (megabase = 1,000,000 base pairs of DNA). The size of genomes is extremly variable across species and influenced by a large number of factors (if you're curious the human genome is ~3,000 Mb (megabase pairs), or 3 billion base pairs in size). The NCBI sequenced genome dataset includes genomes from three domains of organisms: eukaryotes (multi cellular organisms, like you, ducks and ferms), porkaryote (single cell, bacteria) and virus genomes (not a Linnean doman... [more a weird grey area](https://www.scientificamerican.com/article/are-viruses-alive-2004/). Here I plot the size of the genomes in these three domains to compare them, and also look at the GC content of the genomes across these domains. %GC content is the percentage of DNA base pairs composed of G and C (guanine and cytosine) GC-content is indicative of many protein coding genes, and the %GC content is indicative of a gene-rich genome. GC ratios within a genome are know to be extremly variable, with low %GC indicating a large amount of non-coding DNA in the genome. \n\nThese data are derived from [NCBI's repository of sequenced genomes](https://www.ncbi.nlm.nih.gov/home/genomes/). Through the links provided in the Kaggle dataset, one can access the entire sequence to any of these genomes as they are pubically avaliable (for free! thanks science!)"},{"metadata":{"_uuid":"8ae624322a06a36c5efb4f560950b935755646fe"},"cell_type":"markdown","source":"## Loading the data, assessment and cleanup"},{"metadata":{"_execution_state":"idle","_uuid":"fee0228231cf3d013915cfa42f302d6514f51e69","trusted":true,"_cell_guid":"73dd573b-e12a-421e-aaf4-ed8b3398d4a8"},"cell_type":"code","source":"library('tidyverse')\nlibrary('ggthemes')","execution_count":36,"outputs":[]},{"metadata":{"scrolled":true,"trusted":true,"_uuid":"2d250c55b0b0b1198989b5b8e4fd89ec448174cc"},"cell_type":"code","source":"raw_eukaryote = read_csv('../input/eukaryotes.csv')\nhead(raw_eukaryote)","execution_count":37,"outputs":[]},{"metadata":{"scrolled":true,"trusted":true,"_uuid":"740fecb6622b9eaa9513adf00f5d2ce4a6587f38"},"cell_type":"code","source":"# just the chromosome and scaffold level assembies, the contigs removed\neukaryote = raw_eukaryote[raw_eukaryote$Level == \"Chromosome\" || raw_eukaryote$Level == \"Scaffold\",]\nhead(eukaryote)","execution_count":40,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"7e191e3d0301ab0e6cc47285b3bc98f1b87ef0fe"},"cell_type":"code","source":"eukaryote = eukaryote[eukaryote$\"GC%\" > 5,]\n#Prototheca stagnorum has 71% GC content which is pretty neat\neukaryote[eukaryote$\"GC%\" > 70,]","execution_count":41,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"c2fe552143957eaab4bcc4dec5e9cf36ce03caaf"},"cell_type":"code","source":"#looking at the data there appears to be some missing data.\n# GC of zero seen, looks like one with with a very low number,\n# also an outlier with >70% gc, I should look at what this one is \nqplot(eukaryote$\"GC%\") +\n    labs(title = \"Histogram of Eukaryote genome %GC content\", x= \"%GC content\", y = \"Frequency\") +\n\ttheme_fivethirtyeight()","execution_count":44,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"7cd268466510b1d6c2161207b3e833a86bce5b7f"},"cell_type":"code","source":"prokaryote = read_csv('../input/prokaryotes.csv')\nprokaryote = prokaryote[prokaryote$\"GC%\" > 5,]","execution_count":45,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"e5d2bc5271b020c6638c9260ece4ebe4bdbee064"},"cell_type":"code","source":"#check to make sure things aren't valuable\nlow_prokaryote = prokaryote[prokaryote$\"GC%\" < 20,]\nhead(low_prokaryote)","execution_count":46,"outputs":[]},{"metadata":{"scrolled":true,"trusted":true,"_uuid":"21ac70251b3d0bd801c20600ed0df2d0a9806118"},"cell_type":"code","source":"#wider distribution for prokaryotes\n# higher mean and median\nqplot(prokaryote$\"GC%\") +\n    labs(title = \"Histogram of Prokaryote genome %GC content\", x= \"%GC content\", y = \"Frequency\") +\n\ttheme_fivethirtyeight()","execution_count":47,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"524b936837dfdb739c95dc24e40f72b96aa5b9ee"},"cell_type":"code","source":"#one 0 in the viruses... also a gc as high as 80+ investigate further\nviruses = read_csv('../input/viruses.csv')\nviruses = viruses[viruses$\"GC%\" > 5,]","execution_count":50,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"59bd9ba0139ce5131001fbee80c9988c9724b4a2"},"cell_type":"code","source":"qplot(viruses$\"GC%\")+\n    labs(title = \"Histogram of Virus genome %GC content\", x= \"%GC content\", y = \"Frequency\") +\n\ttheme_fivethirtyeight()","execution_count":51,"outputs":[]},{"metadata":{"_uuid":"e2fecee0a2f4d16013fdfde17f3adbae1431a9d0"},"cell_type":"markdown","source":"## %GC content - comparison of means and medians"},{"metadata":{"trusted":true,"_uuid":"c900faf868d657002bfcba66cc993e269ca732d4"},"cell_type":"code","source":"mean(eukaryote$\"GC%\")","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"3a85d58bda7dc8ca86afbaf26ece531f9dd191eb"},"cell_type":"code","source":"mean(prokaryote$\"GC%\")","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"27a8fce732fca39cc2915da241189b3f9e9847d2"},"cell_type":"code","source":"#mean of this GC in between the two others\nmean(viruses$\"GC%\")","execution_count":52,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"f6aad8e46fd186cfb6b038840c40a39b1d9f0d7f"},"cell_type":"code","source":"median(eukaryote$\"GC%\")","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"353830fa082b7a967053f38c12967f0f92395df2"},"cell_type":"code","source":"median(prokaryote$\"GC%\")","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"6956c937de0ce377801b447ebfb4975f392eff10"},"cell_type":"code","source":"median(viruses$\"GC%\")","execution_count":53,"outputs":[]},{"metadata":{"_uuid":"d57d85085d17a1e4b0c0e029d2f05d68dcbf988b"},"cell_type":"markdown","source":"## Comparing trends in the genomes of Viruses, Prokaryotes and Eukaryotes"},{"metadata":{"trusted":true,"_uuid":"da21a20293006aae499d854dc9016fa556acd7c2"},"cell_type":"code","source":"all_genomes = data.frame(domain= \"virus\", \n\t\t\t\t\t\t\tGC = viruses$\"GC%\", \n\t\t\t\t\t\t\tsize_mb = viruses$\"Size(Mb)\" )\n\nall_genomes = rbind(all_genomes, data.frame(domain=\"prokaryote\", \n\t\t\t\t\t\t\t\t\t\t\t\tGC = prokaryote$\"GC%\", \n\t\t\t\t\t\t\t\t\t\t\t\tsize_mb = prokaryote$\"Size(Mb)\"))\nall_genomes = rbind(all_genomes, data.frame(domain=\"eukaryote\", \n\t\t\t\t\t\t\t\t\t\t\t\tGC = eukaryote$\"GC%\", \n\t\t\t\t\t\t\t\t\t\t\t\tsize_mb = eukaryote$\"Size(Mb)\"))","execution_count":54,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"0ce8832751aa9584502b523a33de13ac384ea47c"},"cell_type":"code","source":"boxplot(GC ~ domain , data = all_genomes,\n            main = \"%GC content of sequenced Virus, Prokaryote and Eukaryote genomes\")","execution_count":55,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"b4309ea0edeca9e0385f3331162c3036a1fedd63"},"cell_type":"code","source":"#plot of the gc content by domain\nggplot(all_genomes, aes(x=domain, y=GC, fill=domain, color=domain))+\n\tgeom_boxplot(outlier.shape = NA) +\n\tgeom_point(shape = 21, alpha = 0.1, position=position_jitterdodge())+\n\tscale_fill_manual(values = rep(NA,3)) +\n\ttheme_fivethirtyeight() +\n\tscale_colour_economist() +\n    labs(title = \"%GC content of sequenced Virus, Prokaryote and Eukaryote genomes\", \n            y = \"%GC content\",\n            x = \"domain\")","execution_count":56,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"f2b5e795dee7384f4bf580481ba2002e8e5433f7"},"cell_type":"code","source":"gc_anova = aov(GC ~ domain , data=all_genomes)\nsummary(gc_anova)","execution_count":57,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"55a95043c043d127ef9933585216e099e11b4e36"},"cell_type":"code","source":"TukeyHSD(gc_anova)","execution_count":58,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"b15cf3f95dc33ae901f9fef39ffc59983e235ce5"},"cell_type":"code","source":"#differences in size? should be obvious\nmb_anova = aov(size_mb ~ domain , data=all_genomes)\nsummary(mb_anova)","execution_count":59,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"438cbf9e9e09bd07437016dbb7f0f71a0d7871e4"},"cell_type":"code","source":"TukeyHSD(mb_anova)\n# the virus/prokaryotes not sig different, suggestive of prokaryote fragments in the data","execution_count":60,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"c47dd876fd1ed68d54828f293332f14fcfcf9a19"},"cell_type":"code","source":"ggplot(all_genomes, aes(x=size_mb, y=GC, shape=domain, colour=domain)) +\n        geom_point() +\n        scale_colour_brewer(palette=\"Set1\") +\n        coord_trans(x = \"log10\") +\n        labs(title = \"GC content vs genome size (mb) of genome sequences stored on NCBI\", \n        \t\ty = \"%GC content\", \n        \t\tx = \"Genome size (mb) - Note this axis is log scaled\") +\n        theme(axis.text.x = element_text(angle = 90, hjust = 1))","execution_count":61,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"205925fefa71012efd7d757e74fa1b31e53c1383"},"cell_type":"code","source":"#######\n## load source code\n#locally:\n# source(\"geom_flat_violin.R\")\n\n## sourced from github \"dgrtwo/geom_flat_violin.R\n## https://gist.github.com/dgrtwo/eb7750e74997891d7c20#file-geom_flat_violin-r\n\n# I have pasted in the raw function below for the use in this kernel\n#######\n\n\n\"%||%\" <- function(a, b) {\n  if (!is.null(a)) a else b\n}\n\ngeom_flat_violin <- function(mapping = NULL, data = NULL, stat = \"ydensity\",\n                        position = \"dodge\", trim = TRUE, scale = \"area\",\n                        show.legend = NA, inherit.aes = TRUE, ...) {\n  layer(\n    data = data,\n    mapping = mapping,\n    stat = stat,\n    geom = GeomFlatViolin,\n    position = position,\n    show.legend = show.legend,\n    inherit.aes = inherit.aes,\n    params = list(\n      trim = trim,\n      scale = scale,\n      ...\n    )\n  )\n}\n\n#' @rdname ggplot2-ggproto\n#' @format NULL\n#' @usage NULL\n#' @export\nGeomFlatViolin <-\n  ggproto(\"GeomFlatViolin\", Geom,\n          setup_data = function(data, params) {\n            data$width <- data$width %||%\n              params$width %||% (resolution(data$x, FALSE) * 0.9)\n            \n            # ymin, ymax, xmin, and xmax define the bounding rectangle for each group\n            data %>%\n              group_by(group) %>%\n              mutate(ymin = min(y),\n                     ymax = max(y),\n                     xmin = x,\n                     xmax = x + width / 2)\n          },\n          \n          draw_group = function(data, panel_scales, coord) {\n            # Find the points for the line to go all the way around\n            data <- transform(data, xminv = x,\n                              xmaxv = x - violinwidth * (xmax - x)) # change x - violinwidth to + for violin to right\n            \n            # Make sure it's sorted properly to draw the outline\n            newdata <- rbind(plyr::arrange(transform(data, x = xminv), y),\n                             plyr::arrange(transform(data, x = xmaxv), -y))\n            \n            # Close the polygon: set first and last point the same\n            # Needed for coord_polar and such\n            newdata <- rbind(newdata, newdata[1,])\n            \n            ggplot2:::ggname(\"geom_flat_violin\", GeomPolygon$draw_panel(newdata, panel_scales, coord))\n          },\n          \n          draw_key = draw_key_polygon,\n          \n          default_aes = aes(weight = 1, colour = \"grey20\", fill = \"white\", size = 0.5,\n                            alpha = NA, linetype = \"solid\"),\n          \n          required_aes = c(\"x\", \"y\")\n)","execution_count":62,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"1c28ae2abe2d0d943311076f3e9ed23fa865b5f7"},"cell_type":"code","source":"#####\n# Violin + scatter plot of the gc content of genomes across different organism groups\n#####\n\nggplot(all_genomes, aes(x = domain, y = GC, fill=domain)) +\n\tgeom_flat_violin( colour=\"white\") +\n\tgeom_point(aes(x = as.numeric(domain) + .12, colour=domain) , \n\t\t\t\t\tsize = 0.01, \n\t\t\t\t\tpch=21,\n                    alpha = 0.1,\n\t\t\t\t\tposition = position_jitterdodge(jitter.width = .55, jitter.height = 0.01, dodge.width = 0.75)) +\n\ttheme_fivethirtyeight() +\n    labs(title = \"GC content of genome sequences stored on NCBI\", \n        \ty = \"%GC content\", \n        \tx = \"Genome size (mb)\")","execution_count":63,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}